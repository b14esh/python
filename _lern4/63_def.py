# Если функция должна возвращать больше одного значения, то можно перечислить их через запятую.

''' это многострочный коментарий
def myfunc(x)
   a = x +1
   b = x * 2
   return a, b

# Функция будет возвращать список, но мы можем сращу присвоить возвращаемые значения каким-нибудь переменным:
plusone, sum = myfunc

print
'''

# Внутри функций вполне можно использовать переменные, которые встречались в коде программы до вызова функции. 
# Но если внутри кода функции задать переменную с таким же именем, то эта переменная автоматически станет локальной и все дальнейшие изменения будут происходить с ней только в пределах функции.

def boom(a, b):
    z = 15
    c = a * b * z
    return c 

z = 1
c = boom(15, 20)
print(z)

# В результате выполнения программы ты увидишь единицу. 
# Почему? Внутри кода функции мы присвоили переменной z значение 15, и она стала локальной, 
# и все изменения с ней будут происходить внутри функции, тогда как в основной программе ее значение будет по-прежнему равно единице.
# Это немного трудно понять, но на самом деле удобно. 
# Если ты пишешь несколько похожих функций, то вполне можешь использовать внутри них одинаковые названия локальных переменных, не опасаясь, что они будут влиять как-то друг на друга.

 
